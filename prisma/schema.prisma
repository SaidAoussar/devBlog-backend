generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  firstName    String    @db.VarChar(50)
  lastName     String    @db.VarChar(50)
  email        String    @unique @db.VarChar(50)
  password     String?
  intro        String?
  img          String?
  active       Boolean @default(false)
  registeredAt DateTime  @default(now())
  comments     Comment[]
  posts        Post[]
}

model Post {
  id          Int                 @id @default(autoincrement())
  title       String              @db.VarChar()
  slug        String              @unique @db.VarChar()
  content     String?
  published   Boolean             @default(false)
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  publishedAt DateTime?
  authorId    Int
  author      User                @relation(fields: [authorId], references: [id],onDelete: Cascade)
  categoryId  Int?
  category    Category?            @relation(fields:[categoryId],references: [id],onDelete: SetNull)
  comments    Comment[]
  tags        TagsOnPosts[]
}

model Comment {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(100)
  published   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  publishedAt DateTime?
  content     String?
  postId      Int
  userId      Int
  post        Post      @relation(fields: [postId], references: [id],onDelete: Cascade)
  user        User      @relation(fields: [userId], references: [id],onDelete: Cascade)
}

model Category {
  id    Int                 @id @default(autoincrement())
  name  String
  posts Post[]
}


model Tag {
  id    Int           @id @default(autoincrement())
  name  String
  posts TagsOnPosts[]
}

model TagsOnPosts {
  postId Int
  tagId  Int
  post   Post @relation(fields: [postId], references: [id],onDelete: Cascade,onUpdate: Cascade)
  tag    Tag  @relation(fields: [tagId], references: [id],onDelete: Cascade)

  @@id([postId, tagId])
}
